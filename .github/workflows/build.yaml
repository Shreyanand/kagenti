name: Build-Publish

on:
  # Run this workflow on pushes of tags like v1.0.0
  push:
    tags:
    - 'v*'
  # Allows also to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions to write packages
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image_config:
          - name: ui
            path: ./kagenti
          - name: ui-oauth-secret
            path: ./kagenti/auth
          - name: client-registration
            path: ./kagenti/auth

    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2. Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Log in to the GitHub Container Registry (ghcr.io)
      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This action automatically creates useful tags based on the Git event.
      # In this case, it will use the Git tag as the Docker image tag.
      - name: Extract Docker metadata for ${{ matrix.image_config.name }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.image_config.name }}
          tags: |
            # extract tag from git ref, e.g., v1.0.0 -> 1.0.0
            type=ref,event=tag

      - name: Build and push ${{ matrix.image_config.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image_config.path }}/${{ matrix.image_config.name }}
          file: ${{ matrix.image_config.path }}/${{ matrix.image_config.name }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
